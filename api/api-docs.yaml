openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9090
  description: Generated server url
paths:
  /api/movie/create:
    post:
      tags:
      - movie-controller
      operationId: createMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
        required: true
      responses:
        "201":
          description: Created
  /api/create:
    post:
      tags:
      - employee-controller
      operationId: createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Employee"
  /api/movie:
    get:
      tags:
      - movie-controller
      operationId: getMovie
      parameters:
      - name: pageNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MoviewResponse"
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /api/movieDetails:
    get:
      tags:
      - movie-controller
      operationId: getMovieDetails
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        content:
          type: string
        stars:
          type: integer
          format: int32
        movie:
          $ref: "#/components/schemas/Movie"
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
    MovieDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
    MoviewResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/MovieDTO"
        pageNo:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
